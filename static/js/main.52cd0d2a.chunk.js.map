{"version":3,"sources":["components/AppName.js","helpers/idmaker.js","components/TaskForm.js","helpers/dateChecker.js","components/Task.js","components/TaskList.js","containers/ToDoContainer.js","App.js","serviceWorker.js","state/store.js","state/combinedReducer.js","index.js"],"names":["styles","color","marginTop","position","AppName","react","data-testid","style","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","h3","fontSize","cursor","textDecoration","header","display","flexDirection","justifyContent","TaskForm","dispatch","useDispatch","_React$useState","React","_React$useState2","Object","slicedToArray","shows","setShow","handleClose","taskText","taskDate","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form_default","a","Group","Label","Control","type","ref","node","Footer","Button","variant","task","id","value","completed","deadlineDate","startDate","concat","Date","getFullYear","getMonth","getDate","getHours","getMinutes","checkDate","endsDate","time","sign","abs","days","hours","minutes","Task","_ref","h4","wordWrap","li","border","padding","p","pDeadline","divRow","marginRight","taskDispatch","disabled","doneDate","ul","backgroundColor","listStyleType","overflow","maxHeight","borderRadius","TaskList","tasks","map","components_Task","key","ToDoContainer","todos","useSelector","state","activeTasks","filter","document","title","Col","components_TaskForm","components_TaskList","App","react_default","createElement","className","Container","Row","containers_ToDoContainer","Boolean","window","location","hostname","match","date","store","createStore","action","assign","toConsumableArray","objectSpread","itemsToChange","el","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52cd0d2a.chunk.js","sourcesContent":["import * as React from  'react'\n\nconst styles = {\n    color: '#FAFAFA',\n    marginTop: '2rem',\n    position: 'relative',\n}\n\nexport default function AppName() {\n    return (\n        <h1 data-testid=\"app-header\" style={styles}>ToDo App</h1>\n    )\n}","export function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n","import * as React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport Form from \"react-bootstrap/Form\";\nimport { useDispatch } from \"react-redux\";\nimport { makeid } from '../helpers/idmaker'\n\nconst styles = {\n    h3: {\n        color: 'white',\n        fontSize: '24px',\n        cursor: 'pointer',\n        marginTop: '2rem',\n        textDecoration: 'underline'\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    }\n}\n\nconst TaskForm = () => {\n\n    const dispatch = useDispatch()\n    const [shows, setShow] = React.useState(false)\n\n    const handleClose = () =>{\n        setShow(false)\n    }\n\n    const handleShow = () => {\n        setShow(true)\n    }\n\n    let taskText = '';\n    let taskDate = '';\n\n    const handleCloseAndAddTask = () =>{\n        const task = {\n            id: makeid(10),\n            task: taskText.value,\n            completed: false,\n            deadlineDate: taskDate.value,\n            startDate: `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()+1 } ${new Date().getHours()}:${new Date().getMinutes()}`\n        }\n        dispatch({type: 'ADD_TASK', task})\n        setShow(false)\n    }\n\n    return(\n        <>\n        <div>\n            <h3 data-testid=\"test-show-modal-button\" style={styles.h3} onClick={handleShow}>Add task</h3>\n        </div>\n        <Modal data-testid=\"test-modal\" show={shows} onHide={handleClose}>\n            <Modal.Header  style={styles.header} closeButton>\n                <Modal.Title>Add Task form</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form data-testid=\"test-form\">\n                    <Form.Group>\n                        <Form.Label data-testid=\"test-task-label\">Task text</Form.Label>\n                        <Form.Control type=\"text\" ref={node => { taskText = node }} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid=\"test-date-label\">Task Deadline</Form.Label>\n                        <Form.Control type=\"date\" ref={node => { taskDate = node }} />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleCloseAndAddTask}>\n                    Add task\n                </Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    )\n}\n\nexport default TaskForm","export const checkDate = (startDate, endsDate, type) => {\n\n    let time = new Date(endsDate) - new Date(startDate)\n    const sign = time < 0 ? 'after' : 'before'\n    time = Math.abs(time)\n    const days = Math.floor(time / 86400000)\n    time %= 86400000\n    const hours  = Math.floor(time / 3600000)\n    time %= 3600000\n    const minutes = Math.floor(time / 60000)\n\n\n\n    if(type === 'DEADLINE') {\n        if(sign === 'after') {\n            return `You have ${days} days, ${hours} hours and ${minutes} minutes for finish this task`\n        } else {\n            return `You are late! The deadline is up ${days} days, ${hours} hours and ${minutes} minutes ago`\n        }\n\n\n    } else if (type === 'FINISHED') {\n        return `You have finished task ${days} days, ${hours} hours and ${minutes} minutes ${sign} the deadline`\n    }\n}","import * as React from 'react'\nimport { Button } from 'react-bootstrap'\nimport {useDispatch} from \"react-redux\";\nimport {checkDate} from '../helpers/dateChecker'\n\nconst Task = ({task}) => {\n\n    const styles = {\n        h4: {\n            color: task.completed ? 'green' : 'red',\n            fontSize: '18px',\n            wordWrap: 'break-word'\n        },\n        li: {\n          border: '1px solid white',\n            padding: '10px'\n        },\n        p: {\n          color: 'white'\n        },\n        pDeadline: {\n            color: 'pink'\n        },\n        divRow: {\n            color: 'white',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center'\n        },\n        marginRight: {\n          marginRight: '10px'\n        }\n    }\n\n    const taskDispatch = useDispatch()\n    const deleteTask = (id) => {\n        taskDispatch({type: 'DELETE_TASK', id})\n    }\n    const setTaskDone = (id) => {\n        taskDispatch({type:'SET_TASK_DONE', id})\n    }\n\n\n    return (\n        <li style={styles.li}>\n            <h4 style={styles.h4}>{task.task}</h4>\n            <div style={styles.divRow}>\n                <Button\n                    variant=\"danger\"\n                    onClick={()=>{deleteTask(task.id)}}>\n                    Delete\n                </Button>\n                <Button\n                    variant=\"success\"\n                    disabled={task.completed}\n                    onClick={()=>{setTaskDone(task.id)}}>\n                    Done\n                </Button>\n            </div>\n            <p style={styles.p}>To do: {task.completed ? 'No' : 'Yes'}</p>\n            <p style={styles.p}>DEADLINE: {task.deadlineDate}</p>\n            <p style={styles.pDeadline}>{!task.completed ? checkDate(task.deadlineDate, task.startDate, 'DEADLINE') : checkDate(task.deadlineDate, task.doneDate, 'FINISHED') }</p>\n            <p style={styles.p}>Created at: {task.startDate} {task.doneDate ? ' | Done at ' + task.doneDate : null}</p>\n        </li>\n    )\n}\n\nexport default Task","import * as React from 'react'\nimport Task from './Task'\nimport '../App.css'\n\nconst styles = {\n    ul:{\n        border: '1ps solid white',\n        backgroundColor: '#222c34',\n        listStyleType: 'none',\n        overflow: 'scroll',\n        maxHeight: '670px',\n        borderRadius: '30px',\n    }\n}\n\nconst TaskList = ({tasks}) => {\n    return (\n        <ul  id='tasks-list' style={styles.ul}>\n            {tasks.map(task => (\n               <Task task={task} key={task.id}/>\n            ))}\n        </ul>\n    )\n}\nexport default TaskList","import * as React from 'react'\nimport TaskForm from '../components/TaskForm'\nimport TaskList from '../components/TaskList'\nimport {Col} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\n\nconst ToDoContainer = () => {\n\n    let todos = useSelector((state)=>{\n        return state.todos\n    })\n\n    // Setting page title in browser\n    React.useEffect(()=>{\n        const activeTasks = todos.filter(task => {\n            return task.completed === false\n        })\n        if(activeTasks.length > 5) {\n            document.title = `Hurry up! You have ${activeTasks.length} active tasks!`\n        } else {\n            document.title = `Your task menager`\n        }\n    })\n\n    return (\n        <Col>\n            <TaskForm />\n            {todos.length > 0 ? <TaskList tasks={todos} /> : null}\n        </Col>\n    )\n}\n\n\nexport default ToDoContainer","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport AppName from './components/AppName'\nimport ToDoContainer from './containers/ToDoContainer'\n\n\nexport function App() {\n  return (\n          <div data-testid=\"app-container\" className=\"App\">\n              <Container >\n                  <Row>\n                      <Col>\n                          <AppName />\n                      </Col>\n                  </Row>\n                  <Row>\n                      <ToDoContainer/>\n                  </Row>\n              </Container>\n          </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from \"redux\";\nimport { combinedReducer } from './combinedReducer'\nimport { makeid } from '../helpers/idmaker'\n\n\n\nconst date = new Date()\n\nconst store = createStore(combinedReducer, {\n    todos: [\n        {\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`,\n        },{\n            id: makeid(10),\n            task: 'Do something with php',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },\n        {\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },{\n            id: makeid(10),\n            task: 'Do something with php',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },{\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },{\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },{\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        },{\n            id: makeid(10),\n            task: 'Do something with hooks and redux',\n            completed: false,\n            deadlineDate: '2019-05-25',\n            startDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n        }\n    ]}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\n\nexport default store","export const combinedReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_TASK':\n            return Object.assign({}, state, {\n                todos: [\n                    action.task,\n                    ...state.todos\n                ]\n            })\n        case 'DELETE_TASK':\n            const arrayWithRemovedItem = state.todos.filter(task => {\n                return task.id !== action.id\n            })\n            const todos = {\n                todos: arrayWithRemovedItem\n            }\n            return {\n                ...state,\n                ...todos\n            }\n        case 'SET_TASK_DONE':\n            let itemsToChange = state.todos.map(el => {\n                if(el.id === action.id) {\n                    const date = new Date()\n                    return {\n                        ...el,\n                        completed: true,\n                        doneDate: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()+1} ${date.getHours()}:${date.getMinutes()}`\n                    }\n                }\n                return el\n                })\n                return {\n                    ...state,\n                    todos: itemsToChange\n                }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./state/store\";\nimport {Provider} from \"react-redux\";\n\n export default ReactDOM.render(\n     <Provider store={store}>\n        <App />\n     </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}